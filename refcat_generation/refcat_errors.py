import numpy as np
import lsst.afw.math as afw_math

__all__ = ["RADecErrors", "MagErrors"]


# The spline functions describing refcat uncertainties as a function
# of magnitude were posted by Eli at
# https://jira.lsstcorp.org/browse/DM-42510.

class RADecErrors:
    """Class to produce errors in RA, Dec as a function of r-band
    magnitudes."""
    r_nodes = np.array(
        [10., 10.29487179, 10.58974359, 10.88461538, 11.17948718,
         11.47435897, 11.76923077, 12.06410256, 12.35897436, 12.65384615,
         12.94871795, 13.24358974, 13.53846154, 13.83333333, 14.12820513,
         14.42307692, 14.71794872, 15.01282051, 15.30769231, 15.6025641,
         15.8974359, 16.19230769, 16.48717949, 16.78205128, 17.07692308,
         17.37179487, 17.66666667, 17.96153846, 18.25641026, 18.55128205,
         18.84615385, 19.14102564, 19.43589744, 19.73076923, 20.02564103,
         20.32051282, 20.61538462, 20.91025641, 21.20512821])
    ra_err_pars = np.array(
        [3.38278699e-11, 3.10915224e-11, 4.04199584e-11, 5.17575114e-11,
         5.21426377e-11, 4.53372008e-11, 3.91624889e-11, 3.37701270e-11,
         3.55053980e-11, 3.71179536e-11, 3.31550005e-11, 3.47787855e-11,
         3.73797492e-11, 4.07676897e-11, 4.44070895e-11, 4.91832157e-11,
         5.53420483e-11, 6.24176121e-11, 7.06968814e-11, 8.07525170e-11,
         9.35215016e-11, 1.08801807e-10, 1.26434330e-10, 1.47334427e-10,
         1.73722307e-10, 2.05497105e-10, 2.44148018e-10, 2.91558923e-10,
         3.48284888e-10, 4.20257921e-10, 5.11452747e-10, 6.27990310e-10,
         7.71475040e-10, 9.55337746e-10, 1.22670367e-09, 1.63475247e-09,
         2.39237230e-09, 4.01253518e-09, 5.24143804e-09])
    dec_err_pars = np.array(
        [4.33991525e-11, 3.94884805e-11, 5.11485576e-11, 6.61919152e-11,
         6.60030574e-11, 5.73884044e-11, 4.95882203e-11, 4.25594328e-11,
         4.35070664e-11, 4.61036370e-11, 4.10423723e-11, 4.33434031e-11,
         4.64112616e-11, 5.05743320e-11, 5.55947452e-11, 6.15249830e-11,
         6.92207841e-11, 7.78489545e-11, 8.86481386e-11, 1.01568792e-10,
         1.17649266e-10, 1.36580194e-10, 1.59464950e-10, 1.86305002e-10,
         2.20208182e-10, 2.61002972e-10, 3.11178412e-10, 3.73061155e-10,
         4.48116153e-10, 5.41291960e-10, 6.55874736e-10, 8.03488810e-10,
         9.85821995e-10, 1.22363632e-09, 1.55990549e-09, 2.07235854e-09,
         2.99613743e-09, 5.11620088e-09, 7.76800833e-09])

    def __init__(self):
        self.ra_spline = afw_math.makeInterpolate(
            self.r_nodes, self.ra_err_pars,
            afw_math.stringToInterpStyle("CUBIC_SPLINE"))
        self.dec_spline = afw_math.makeInterpolate(
            self.r_nodes, self.dec_err_pars,
            afw_math.stringToInterpStyle("CUBIC_SPLINE"))

    def __call__(self, rmag_values):
        ra_errors = np.array(self.ra_spline.interpolate(rmag_values))
        dec_errors = np.array(self.dec_spline.interpolate(rmag_values))
        return ra_errors, dec_errors


class MagErrors:
    """Class to produce magnitude errors for g, r, i bands."""
    g_nodes = np.array(
        [10., 10.32051282, 10.64102564, 10.96153846, 11.28205128,
         11.6025641, 11.92307692, 12.24358974, 12.56410256, 12.88461538,
         13.20512821, 13.52564103, 13.84615385, 14.16666667, 14.48717949,
         14.80769231, 15.12820513, 15.44871795, 15.76923077, 16.08974359,
         16.41025641, 16.73076923, 17.05128205, 17.37179487, 17.69230769,
         18.01282051, 18.33333333, 18.65384615, 18.97435897, 19.29487179,
         19.61538462, 19.93589744, 20.25641026, 20.57692308, 20.8974359,
         21.21794872, 21.53846154, 21.85897436, 22.17948718])
    gmag_err_pars = np.array(
        [0.00075583, 0.00077198, 0.00087774, 0.00089578, 0.00086628,
         0.0008541, 0.00086646, 0.00085778, 0.00086921, 0.00089122,
         0.00091734, 0.00097286, 0.00103299, 0.00111215, 0.00122524,
         0.00138016, 0.00155259, 0.00179476, 0.00208455, 0.0024531,
         0.00288488, 0.00299528, 0.00088742, 0.000775, 0.00075479,
         0.00088128, 0.00097773, 0.00116479, 0.00141206, 0.00175246,
         0.00218017, 0.00273706, 0.00342485, 0.00431554, 0.00549093,
         0.00689535, 0.00891684, 0.01174365, 0.01792494])
    r_nodes = np.array(
        [10., 10.29487179, 10.58974359, 10.88461538, 11.17948718,
         11.47435897, 11.76923077, 12.06410256, 12.35897436, 12.65384615,
         12.94871795, 13.24358974, 13.53846154, 13.83333333, 14.12820513,
         14.42307692, 14.71794872, 15.01282051, 15.30769231, 15.6025641,
         15.8974359, 16.19230769, 16.48717949, 16.78205128, 17.07692308,
         17.37179487, 17.66666667, 17.96153846, 18.25641026, 18.55128205,
         18.84615385, 19.14102564, 19.43589744, 19.73076923, 20.02564103,
         20.32051282, 20.61538462, 20.91025641, 21.20512821, 21.5])
    rmag_err_pars = np.array(
        [0.00060493, 0.00059803, 0.00064282, 0.00063734, 0.00064595,
         0.00064981, 0.00066702, 0.00069745, 0.00073176, 0.00076898,
         0.00083228, 0.0008896, 0.00095956, 0.00105372, 0.00116143,
         0.00128877, 0.00145561, 0.00164491, 0.00189225, 0.00214277,
         0.00247495, 0.00071117, 0.00057246, 0.00055758, 0.00059517,
         0.00063366, 0.00071183, 0.00082095, 0.00097074, 0.00116158,
         0.00140217, 0.00170098, 0.00206245, 0.00252045, 0.00304998,
         0.00382797, 0.00467246, 0.00579621, 0.00171531, 0.00163092])
    i_nodes = np.array(
        [10., 10.27435897, 10.54871795, 10.82307692, 11.0974359,
         11.37179487, 11.64615385, 11.92051282, 12.19487179, 12.46923077,
         12.74358974, 13.01794872, 13.29230769, 13.56666667, 13.84102564,
         14.11538462, 14.38974359, 14.66410256, 14.93846154, 15.21282051,
         15.48717949, 15.76153846, 16.03589744, 16.31025641, 16.58461538,
         16.85897436, 17.13333333, 17.40769231, 17.68205128, 17.95641026,
         18.23076923, 18.50512821, 18.77948718, 19.05384615, 19.32820513,
         19.6025641, 19.87692308, 20.15128205, 20.42564103, 20.7])
    imag_err_pars = np.array(
        [0.00021605, 0.00019868, 0.00025121, 0.00027302, 0.00029644,
         0.00031839, 0.00034683, 0.00038225, 0.0004206, 0.00046231,
         0.00051505, 0.00057244, 0.00064336, 0.00071961, 0.0008109,
         0.00091719, 0.00103902, 0.00118545, 0.00135945, 0.00155399,
         0.00178577, 0.0018693, 0.00055495, 0.00053818, 0.00056799,
         0.00063186, 0.00069372, 0.00078708, 0.00090646, 0.00106082,
         0.0012505, 0.00149652, 0.00178609, 0.00215072, 0.00261275,
         0.00325392, 0.00419662, 0.00544714, 0.00692148, 0.00698998])

    def __init__(self):
        self.mag_error_spline = {
            'g': afw_math.makeInterpolate(
                self.g_nodes, self.gmag_err_pars,
                afw_math.stringToInterpStyle("CUBIC_SPLINE")),
            'r': afw_math.makeInterpolate(
                self.r_nodes, self.rmag_err_pars,
                afw_math.stringToInterpStyle("CUBIC_SPLINE")),
            'i': afw_math.makeInterpolate(
                self.i_nodes, self.imag_err_pars,
                afw_math.stringToInterpStyle("CUBIC_SPLINE"))
            }

    def __call__(self, mag_values, band):
        return np.array(self.mag_error_spline[band].interpolate(mag_values))
